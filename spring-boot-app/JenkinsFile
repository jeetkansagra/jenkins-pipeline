pipeline {
  agent {
    docker {
      image 'abhishekf5/maven-abhishek-docker-agent:v1'
      args '--user root -v /var/run/docker.sock:/var/run/docker.sock' // mount Docker socket to access the host's Docker daemon
    }
  }
  options {
    skipDefaultCheckout(true)
  }
  stages {
    
    stage('Checkout') {
      steps {
        script {
          // Force clean workspace
          sh 'rm -rf .git || true'
          sh 'rm -rf * || true'
          sh 'rm -rf .* || true'
        }
        checkout scm
        sh 'echo passed'
      }
    }
    
    stage('Build and Test') {
      steps {
        sh 'ls -ltr'
        // build the project and create a JAR file
        sh 'cd spring-boot-app && mvn clean package'
      }
    }
    
    stage('Build and Push Docker Image') {
      environment {
        DOCKER_IMAGE = "jeetkansagra07/ultimate-cicd:${BUILD_NUMBER}"
        REGISTRY_CREDENTIALS = credentials('docker-cred')
      }
      steps {
        script {
            sh 'cd spring-boot-app && docker build -t ${DOCKER_IMAGE} .'
            def dockerImage = docker.image("${DOCKER_IMAGE}")
            docker.withRegistry('https://index.docker.io/v1/', "docker-cred") {
                dockerImage.push()
            }
        }
      }
    }
    
    stage('Update Deployment File') {
      environment {
          GIT_REPO_NAME = "jenkins-pipeline"
          GIT_USER_NAME = "jeetkansagra"
      }
      steps {
          withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
              sh '''
                  git config user.email "jeetkansagra07@gmail.com"
                  git config user.name "Jeet Kansagra"
                  BUILD_NUMBER=${BUILD_NUMBER}
                  
                  # Show current content
                  echo "Before update:"
                  cat spring-boot-app-manifests/deployment.yml
                  
                  # Update image tag - handle both cases: replaceImageTag or existing build numbers
                  sed -i "s|image: jeetkansagra07/ultimate-cicd:.*|image: jeetkansagra07/ultimate-cicd:${BUILD_NUMBER}|g" spring-boot-app-manifests/deployment.yml
                  sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" spring-boot-app-manifests/deployment.yml
                  
                  # Show updated content
                  echo "After update:"
                  cat spring-boot-app-manifests/deployment.yml
                  
                  git add spring-boot-app-manifests/deployment.yml
                  
                  # Only commit and push if there are changes
                  if git diff --cached --quiet; then
                      echo "No changes to commit - deployment file already up to date"
                  else
                      echo "Changes detected, committing..."
                      git commit -m "Update deployment image to version ${BUILD_NUMBER}"
                      git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
                  fi
              '''
          }
      }
    }
  }
}